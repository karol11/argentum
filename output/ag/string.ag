using sys {
    String,
    Cursor,
    Blob,
    StrBuilder,
    SharedArray
}
using array;

class String {
    *cursor() Cursor { Cursor.set(this) }
    *split(delimiter short) @SharedArray(String) {
        text = Cursor.set(this);
        SharedArray(String).`r{
            loop !(text.getTill(delimiter) ? r.append(_))
        }
    }
}
class Cursor {
    getTill(separator short) ?str {
        peekCh() != 0s ? {
            r = StrBuilder;
            loop !{
                c = getCh();
                c != separator && c != 0s ? r.putCh(c)
            };
            r.toStr()
        }
    }
}

class StrBuilder {
    pos = 0;
    reserve(bytes int) {
        size = capacity();
        pos + bytes >= size ?
            insert(size, size * 2 + 4 + bytes);
    }
    putCh(codePoint short) this {
        reserve(8);
        pos := putChAt(pos, codePoint)
    }
    putStr(s str) this {
        in = Cursor.set(s);
        loop !{
            c = in.getCh();
            c != 0s ? putCh(c)
        }
    }
    putOptStr(s ?str) this { s ? putStr(_) }
    putInt(val int) this {
        reserve(22);
        isNeg = val < 0;
        isNeg ? val *= -1;
        p = pos + 21;
        loop {
            set8At(p -= 1, short(val % 10)->{_<0s?-_:_} + '0');
            (val /= 10) == 0
        };
        isNeg ? set8At(p -= 1, '-');
        copy(pos, this, p, pos + 21 - p);
        pos += pos + 21 - p;
    }
    newLine() this {
        putCh(0x0as);
    }
    toStr() str {
        mkStr(0, pos).{
            pos := 0
        }
    }
}
