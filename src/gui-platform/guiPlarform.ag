using sys { String, Blob }

class App {
    run(appName str, fps int, initializer());
    onFocused(isFocused bool){} // window got keyboard focus
    onPaused(isPaused bool){}  // desktop: minimize window, mobile - app sleep
    onResized(width int, height int){} // desktop - all resizes excep minimize, mobile - rotates, split screen, show/hide kbd
    onKey(down bool, key short, shifts short){}
    onCursor(x int, y int) {}
    onScroll(dx int, dy int, dzoom int) {}
    pausePaints(isPaused bool); // call to pause/resume fps-bound repaints
    onPaint(c Canvas) {}
    onQuit(){}
    onLowMemory(){}
}

class Rect {
	left = 0f;
	top = 0f;
	right = 0f;
	bottom = 0f;
	setXYWH(x float, y float, w float, h float) this {
		left := x;
		top := y;
		right := x + w;
		bottom := y + h;
	}
}

class Paint{
	handle_id=0;
	color(argb short) this;
	fill() this;
	stroke(width short) this;
}
fn destroyPaint(me Paint);
fn afterCopyPaint(me Paint) { me.handle := 0 }

class Image{
	handle_id=0;
	fromBlob(data *Blob) this;
}
fn destroyImage(me Image);
fn afterCopyImage(me Image) { me.handle := 0 }

class Font{
	handle_id=0;
	fromBlob(data()@Blob) this;
	fromName(name str) this;
}
fn destroyFont(me Font);
fn afterCopyFont(me Font) { me.handle := 0 }

class Canvas {
	handle_id=0;
	clear(color short);
	drawLine(x0 float, y0 float, x1 float, y1 float, p -Paint) this;
	drawRect(r -Rect, p -Paint) this;
	drawImage(x int, y int, img -Image) this;
	drawSimpleText(x int, y int, s str, font -Font, size int, p -Paint) this;
}
fn destroyCanvas(me Canvas);
fn afterCopyFont(me Canvas) { me.handle := 0 }

// class MyApp {
//    +App;
//    onPaint(c Canvas) {
//        c.clear(0xff_ffffff);
//        p = Paint.color(0xff_008800);
//        forRange(0, 100) {
//            c.drawLine(_ * 2, 0, 0, 100 - i * 2, p);
//        }
//        pausePaints(true);
//    }
// }
// MyApp.run("Hello AG", 60) {_}
